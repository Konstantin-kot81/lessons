-module(test).

-autor("KonstAnat").

-vsn(1.0).

-export([add/2]).
-export([hello/0]).
-export([greet_and_add_two/1]).


-export([a_0/0]).


-export([last_1/1]).
-export([last_2/1]).
-export([coun/1]).

-export([p_01/1]).
-export([p_02/1]).
-export([p_03/2]).
-export([p_04/1]).
-export([p_05/1]).
-export([p_06/1]).
-export([p_07/1]).


-export([p_10/1]).

% -compile([debug_info, export_all]).

-define(HOUR, 3600). % в секундах

-define(sub(X, Y), X - Y).

add(A, B) ->
	A + B.


% Печатает приветствие.
% io:format/1 -- стандартная функция для пичати текста (на экране в том числе).

hello() ->
	io:format("Hello, world! ~n").

greet_and_add_two(X) ->
	hello(),
	add(X,2).


a_0() ->
	?sub(12,17).




% [1,2,3,4,5,6,7] -> 7

last_1([X]) -> X;
last_1([_ | T]) -> last_1(T).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% [a,b,c,d] -> d

p_01([X]) -> {X};
p_01([_ | T]) -> p_01(T).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% [1,2,3,4,5,a,7] -> [a, 7]

last_2([X, Y]) -> [X, Y];
last_2([_ | T]) -> last_2(T).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% [a,b,c,d,e,f,g] -> [f,g]

p_02([X, Y]) -> [X, Y];
p_02([_ | T]) -> p_02(T).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% [1,2,3,4,a,5,6,b,7] -> 9

coun(List) -> coun(List, 0).
coun([_ | T], Acc) -> coun(T, Acc + 1);
coun([], Acc) -> Acc.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ([a,b,c,d,e,f,g],4) -> d 

p_03(List, X) -> p_03(List, X, 1).
p_03([H | _], X, X) -> H;

p_03([_ | T], X, Acc) -> p_03(T, X, Acc +1);
p_03([], _, _) -> error.
	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% [1,2,3,4,a,5,6,b,7] -> 9

p_04(List) -> p_04(List, 0).
p_04([_ | T], Acc) -> p_04(T, Acc +1);
p_04([], Acc) -> Acc.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% [1,2,3,4,5,6,7] -> [7,6,5,4,3,2,1]

p_05(List) -> p_05(List, []).
p_05([H | T], Acc) -> p_05(T, [H | Acc]);
p_05([], Acc) -> Acc.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% "madam" -> true

p_06(List) -> p_05(List) == List.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% [a,[b,[c,d],e]] -> [a,b,c,d,e]

p_07(List) -> p_07(List, []).
p_07([_ , [H | T ]| T], Acc) -> p_07(T, Acc);
p_07([], Acc) -> Acc.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% [a,a,a,a,b,c,c,a,a,d,e,e,e,e] -> [[4,a],[1,b],[2,c],[2,a],[1,d],[4,e]]

p_10(List) -> p_10(List, 1, []).
p_10([H, H | T], D, Acc) -> p_10([H | T], D + 1, Acc);
p_10([H | T], D, Acc) -> p_10(T, 1, [[D,H] | Acc]);
p_10([],_, Acc) -> p_05(Acc).